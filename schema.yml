(module): "Masters"
(cs_namespace): "ReceivableAccounts"
(namespace): "Financial"

(database_name): "ERP_FMS"
(schema_name): "Maestro"

TXTPaymentDebit:
  (sql_ignore): true
  (filter_ignore): true
  (service_ignore): true
  (list_ignore): true

  bank: { type: string, (alt): Banco }
  bankAccount: { type: string, (alt): NumeroCuentaBancaria }
  socialReason: { type: string, (alt): RazonSocial }
  rif: { type: string, (alt): rif }
  amount: { type: double, (alt): monto }

TXTPaymentCredit:
  (sql_ignore): true
  (filter_ignore): true
  (service_ignore): true
  (list_ignore): true

  bank: { type: string, (alt): Banco }
  bankAccount: { type: string, (alt): NumeroCuentaBancaria }
  socialReason: { type: string, (alt): RazonSocial }
  rif: { type: string, (alt): rif }
  documentNumber: { type: string, (alt): NumeroDocumentoPago }
  swift: { type: string, (alt): CodigoSwift }
  phone: { type: string, (alt): Telefono }
  webpage: { type: string, (alt): PaginaWeb }
  amount: { type: double, (alt): MontoAplicado }
  date: { type: date, (alt): FechaCreacion }

TXTPaymentDetail:
  (sql_ignore): true
  (filter_ignore): true
  (service_ignore): true
  (list_ignore): true

  debit: { type: TXTPaymentDebit, (alt): debito, array: true }
  credit: { type: TXTPaymentCredit, (alt): credito, array: true }

TXTPayment:
  (alt): PagoTXT
  (singular): true
  (notPost): true

  (spGet): "[ERP_FMS].[Transaccional].[spConsultarTransaccionesPagoxLote]"

  lotId: { type: long, pk: true, (alt): IdLote }
  lot: { type: string, (alt): Lote }
  lotDate: { type: date, (alt): fechaLote, (display): Fecha del lote, default: }
  socialReason: { type: string, (alt): RazonSocial, (display): Nombre o razon social }
  rif: { type: string, (alt): rif, (display): Rif }
  details: { type: TXTPaymentDetail, (alt): detalle, array: true }

FormatTXTPaymentFormatFilter:
  (sql_ignore): true
  (filter_ignore): true
  (dao_ignore): true
  (service_ignore): true
  (list_ignore): true
  (embedFilter): true

  bankId: { type: long, (alt): IdBanco }

FormatTXTPayment:
  (alt): "FormatoPagoTXT"
  (isPage): true
  (notPost): true
  (singular): true
  (singularFromFilter): true
  (filter): FormatTXTPaymentFormatFilter
  # (spGetList): "[ERP_FMS].[Transaccional].[spLibroVentasResumido]"
  # (pageItem): SalesBookElement

  bankId: { type: long, (alt): IdBanco }
  template: { type: text, (alt): Plantilla }

FormatTXTPaymentReport:
  (alt): "FormatoPagoAuditoriaTXT"
  (isPage): true
  (singular): true
  # (spGetList): "[ERP_FMS].[Transaccional].[spLibroVentasResumido]"
  # (pageItem): SalesBookElement

  bankId: { type: long, (alt): IdBanco }
  lotId: { type: long, (alt): IdLote }
  template: { type: text, (alt): Resultado }

####################################################################################################################

PaymentLetterFilter:
  (sql_ignore): true
  (filter_ignore): true
  (dao_ignore): true
  (service_ignore): true
  (list_ignore): true
  (embedFilter): true

  lotId: { type: long, (alt): IdLote }

PaymentLetter:
  (alt): CartaPago
  (notPost): true
  (filter): PaymentLetterFilter
  (spGetList): "[ERP_FMS].[Transaccional].[spConsultarCartasPagos]"

  id: { type: long, (alt): IdCartaPago }
  number: { type: string, (alt): NumeroCartaPago, (display): Número de carta }
  bank: { type: string, (alt): Banco, (display): Banco }
  type: { type: string, (alt): TipoEstatusTransaccion, (display): Estatus }
  lotId: { type: long, (alt): IdLote, (display): Estatus }
  lot: { type: string, (alt): Lote, (display): Lote }
  date: { type: date, (alt): FechaCreacion, (display): Fecha de creación }

PaymentLetterPost:
  (alt): CartaPagoPost
  (filter_ignore): true
  (list_ignore): true
  (spPost): "[ERP_FMS].[Transaccional].[spActualizarCartasPagos]"

  lotId: { type: long, (alt): IdLote }
  businessId: { type: long, (alt): IdEmpresa }
  userId: { type: long, (alt): IdUsuario }
  currencyBaseId: { type: long, (alt): IdMonedaBase }
  currencyConversionId: { type: long, (alt): IdMonedaConversion }

####################################################################################################################

SalesBookFilter:
  (sql_ignore): true
  (filter_ignore): true
  (dao_ignore): true
  (service_ignore): true
  (list_ignore): true
  (embedFilter): true

  # page: { type: number, default: 1, (alt): NumeroPagina }
  # pageSize: { type: number, default: 5, (alt): RegistrosPagina }

  # dateInterval: { type: number, default: -1, (alt): FechaIntervalo }

  branchId: { default: "", type: string, (alt): IdSucursal }
  initDate: { type: date, default: zeroDate(), (alt): FechaDesde }
  endDate: { type: date, default: now(), (alt): FechaHasta }

SalesBookElement:
  (service_ignore): true
  (sql_ignore): true
  (filter_ignore): true

  date: { type: date, (alt): Fecha, (display): Fecha }
  rif: { type: string, (alt): RIF, (display): RIF }
  name:
    { type: string, (alt): NombreRazonSocial, (display): Nombre / Razón Social }
  ivaComprobantId: { type: long, (alt): IdComprobanteRetencionIvaFactura }
  numberIvaComprobant:
    {
      type: string,
      (alt): NumeroComprobanteRetencionIvaFactura,
      (display): Nombre / Razón Social,
    }
  dateIvaComprobant:
    {
      type: date,
      (alt): FechaComprobanteRetencionIvaFactura,
      (display): Fecha Retención IVA,
    }
  invoiceTypeId: { type: long, (alt): IdTipoFactura }
  invoiceType: { type: string, (alt): TipoFactura, (display): Tipo Documento }
  invoiceId: { type: long, (alt): IdFactura }
  invoiceNumber:
    {
      type: string,
      (alt): NumeroFactura,
      (display): Número de factura afectada,
    }

  salesTotalPlusIvaBase:
    {
      type: double,
      (alt): TotalVentasMasIvaBase,
      (display): Total Ventas + IVA,
    }
  salesTotalPlusIvaConversion:
    { type: double, (alt): TotalVentasMasIvaConversion }

  exemptIvaBase: { type: double, (alt): ExentoBase, (display): Exento }
  exemptIvaConversion: { type: double, (alt): ExentoConversion }

  taxedReduced8Base:
    {
      type: double,
      (alt): GravadaReducida8Base,
      (display): Gravada Reducida 8%,
    }
  taxedReduced8Conversion: { type: double, (alt): GravadaReducida8Conversion }

  iva8Base: { type: double, (alt): Iva8%Base, (display): IVA 8% }
  iva8Conversion: { type: double, (alt): Iva8%Conversion }

  taxedGeneral12Base:
    {
      type: double,
      (alt): GravadaGeneral12Base,
      (display): Gravada General 12%,
    }
  taxedGeneral12Conversion: { type: double, (alt): GravadaReducida12Conversion }

  iva12Base: { type: double, (alt): Iva12Base, (display): IVA 12% }
  iva12Conversion: { type: double, (alt): Iva12Conversion }

  taxedGeneral16Base:
    {
      type: double,
      (alt): GravadaGeneral16Base,
      (display): Gravada General 16%,
    }
  taxedGeneral16Conversion: { type: double, (alt): GravadaReducida16Conversion }

  iva16Base: { type: double, (alt): Iva16Base, (display): IVA 16% }
  iva16Conversion: { type: double, (alt): Iva16Conversion }

  retention75Base:
    {
      type: double,
      (alt): "PorcentajeRetencion75Base",
      (display): "% Retención 75/100",
    }
  retention75Conversion:
    { type: double, (alt): PorcentajeRetencion75Conversion }

  ivaWithheldBase:
    { type: double, (alt): IvaRetenidoBase, (display): IVA Retenido }
  ivaWitheldConversion: { type: double, (alt): IvaRetenidoConversion }

  ivaReceivedBase:
    { type: double, (alt): IvaRecibidoBase, (display): IVA Recibido }
  ivaReceivedonversion: { type: double, (alt): IvaRecibidoConversion }

SalesBook:
  (alt): "LibroVenta"
  # (isPage): true
  (notPost): true
  (filter): SalesBookFilter
  (spGetList): "[ERP_FMS].[Transaccional].[spLibroVentasResumido]"
  # (pageItem): SalesBookElement

  date: { type: date, (alt): FechaRetencionIva, (display): Fecha Retencion IVA }
  rif: { type: string, (alt): Rif, (display): RIF }
  name: { type: string, (alt): Comprador, (display): Nombre / Razón Social }
  numberIvaComprobant:
    {
      type: string,
      (alt): NumeroRetencionIva,
      (display): Número de Comprobante de Retención IVA,
    }
  # dateIvaComprobant: { type: date, (alt): FechaRetencionIva, (display): Fecha Retención IVA }
  invoiceType: { type: string, (alt): Tipo, (display): Tipo Documento }
  invoiceNumber:
    {
      type: long,
      (alt): FacturaAfectada,
      (display): Número de factura afectada,
    }
  salesTotal:
    { type: double, (alt): TotalVentas, (display): Total Ventas + IVA }
  exemptIva: { type: double, (alt): Exento, (display): Exento }
  taxedReduced8: { type: double, (alt): Base8, (display): Gravada Reducida 8% }
  iva8: { type: double, (alt): Iva8, (display): IVA 8% }
  taxedReduced16:
    { type: double, (alt): Base16, (display): Gravada General 16% }
  iva16: { type: double, (alt): Iva16, (display): IVA 16% }
  retention: { type: double, (alt): Retencion, (display): "% Retención 75/100" }
  ivaWithheld: { type: double, (alt): IvaRetenido, (display): IVA Retenido }
  ivaReceived: { type: double, (alt): IvaPercibido, (display): IVA Percibido }

SalesBookDetailed:
  (alt): "LibroVentaDetallado"
  (notPost): true
  (filter): SalesBookFilter
  (spGetList): "[ERP_FMS].[Transaccional].[spLibroVentasDetallado]"

  date: { type: date, (alt): FechaRetencionIva, (display): Fecha Retencion IVA }
  box: { type: string, (alt): Caja, (display): Caja }
  serial: { type: string, (alt): SerialFiscal, (display): Serial Fiscal }
  type: { type: string, (alt): Tipo, (display): Tipo Documento }
  first: { type: long, (alt): PrimeraFactura, (display): Primer Comprobante }
  last: { type: long, (alt): UltimaFactura, (display): Último Comprobante }
  affected: { type: long, (alt): FacturaAfectada, (display): Factura Afectada }
  name: { type: string, (alt): Comprador, (display): Nombre / Razón Social }
  rif: { type: string, (alt): Rif, (display): RIF }
  salesTotal: { type: double, (alt): TotalVentas, (display): Total Ventas }
  # dateIvaComprobant: { type: date, (alt): FechaRetencionIva, (display): Fecha Retención IVA }

  noExemptIva:
    { type: double, (alt): NoExento, (display): Exento (no contribuyente) }
  noTaxedReduced8:
    {
      type: double,
      (alt): NoBase8,
      (display): Gravada Reducida 8% (no contribuyente),
    }
  noIva8: { type: double, (alt): NoIva8, (display): IVA 8% (no contribuyente) }
  noTaxedReduced16:
    {
      type: double,
      (alt): NoBase16,
      (display): Gravada General 16% (no contribuyente),
    }
  noIva16:
    { type: double, (alt): NoIva16, (display): IVA 16% (no contribuyente) }

  exemptIva: { type: double, (alt): Exento, (display): Exento (contribuyente) }
  taxedReduced8:
    {
      type: double,
      (alt): Base8,
      (display): Gravada Reducida 8% (contribuyente),
    }
  iva8: { type: double, (alt): Iva8, (display): IVA 8% (contribuyente) }
  taxedReduced16:
    {
      type: double,
      (alt): Base16,
      (display): Gravada General 16% (contribuyente),
    }
  iva16: { type: double, (alt): Iva16, (display): IVA 16% (contribuyente) }

  numberIvaComprobant:
    {
      type: string,
      (alt): NumeroRetencionIva,
      (display): Número de Comprobante,
    }
  retention: { type: double, (alt): Retencion, (display): "% Retención 75/100" }

  exempts: { type: double, (alt): DiemoExento, (display): Exentas }
  ivaWithheld: { type: double, (alt): IvaRetenido, (display): IVA Retenido }
  ivaReceived: { type: double, (alt): IvaPercibido, (display): IVA Percibido }

  # elements: { type: SalesBookElement, array: true, (alt): ELEMENTOS }
  # count: { type: number, (alt): CantidadRegistros }

##############################################################################################################

IvaInvoice:
  (alt): DocumentoIva

  (sql_ignore): true
  (filter_ignore): true
  (service_ignore): true

  id: { type: long, (alt): IdDocumento }
  date: { type: date, (alt): FechaDocumento, (display): Fecha }
  invoiceNumber: { type: string, (alt): NumeroDocumento, (display): Factura }
  control: { type: string, (alt): NumeroControl, (display): Control }
  invoiceTotalBase: { type: double, (alt): TotalDocumentoBase }
  invoiceTotalConversion:
    { type: double, (alt): TotalDocumentoConversion, (display): Total Factura }
  taxId: { type: long, (alt): IdImpuesto }
  invoiceTypeId: { default: -1, type: number, (alt): IdTipoDocumento }
  invoiceType: { type: string, (alt): TipoDocumento }
  ivaAmountBase:
    { type: double, (alt): MontoIvaDocumentoBase, (display): Monto IVA }
  ivaAmountConversion:
    { type: double, (alt): MontoIvaDocumentoConversion, (display): Monto IVA }
  ivaRetention:
    {
      type: double,
      (alt): PorcentajeRetencionIvaDocumento,
      (display): "% Retención de IVA",
    }
  retentionTotalBase:
    {
      type: double,
      (alt): TotalRetencionDocumentoBase,
      (display): Total Retencion,
    }
  retentionTotalConversion:
    {
      type: double,
      (alt): TotalRetencionDocumentoConversion,
      (display): Total Retencion,
    }
  totalBase: { type: double, (alt): TotalBase, (display): Total }
  totalConversion: { type: double, (alt): TotalConversion, (display): Total }

IvaInvoiceListFilter:
  (sql_ignore): true
  (filter_ignore): true
  (dao_ignore): true
  (service_ignore): true
  (list_ignore): true
  (embedFilter): true

  page: { type: number, default: 1, (alt): NumeroPagina }
  pageSize: { type: number, default: 5, (alt): CandidadRegistros }
  idComprobant:
    { type: long, default: -1, (alt): IdComprobanteRetencionIvaDocumento }
  idSupplier: { default: -1, type: long, (alt): IdProveedor }
  idBusiness: { default: 1, type: long, (alt): IdEmpresa }

IvaInvoiceList:
  (alt): DocumentosIva

  (list_ignore): true
  (isPage): true
  (notPost): true
  (singular): true
  (singularFromFilter): true
  (filter): IvaInvoiceListFilter
  (pageItem): IvaInvoice

  elements: { type: IvaInvoice, array: true, (alt): ELEMENTOS }
  count: { type: number, (alt): CantidadRegistros }

IvaInvoicesComprobantDetail:
  (alt): ComprobanteRetencionIvaDocumentoDetalle

  (sql_ignore): true
  (filter_ignore): true
  (service_ignore): true

  id: { type: long, (alt): IdComprobanteRetencionIvaDocumentoDetalle }
  invoiceId: { type: long, (alt): IdDocumento }
  active: { type: boolean, (alt): IndActivo }

IvaInvoicesComprobantFilter:
  (sql_ignore): true
  (filter_ignore): true
  (dao_ignore): true
  (service_ignore): true
  (list_ignore): true
  (embedFilter): true

  page: { type: number, default: 1, (alt): NumeroPagina }
  pageSize: { type: number, default: 5, (alt): CandidadRegistros }

  initDate: { type: date, default: zeroDate(), (alt): FechaInicio }
  endDate: { type: date, default: now(), (alt): FechaFin }
  supplierType: { default: "", type: string, (alt): TipoProveedor }
  supplierId: { default: -1, type: number, (alt): IdProveedor }
  invoiceTypeId: { default: -1, type: number, (alt): IdTipoDocumento }
  statusId: { default: -1, type: number, (alt): IdEstatus }
  idBusiness: { default: 1, type: long, (alt): IdEmpresa }

IvaInvoicesComprobantItem:
  (alt): ComprobanteRetencionIvaDocumento

  (omit_on_list): invoices
  (filter_ignore): true
  (service_ignore): true
  (sql_ignore): true

  id: { type: long, pk: true, (alt): IdComprobanteRetencionIvaDocumento }
  date: { type: date, (alt): FechaComprobante, (display): Fecha }
  comprobantNumber:
    { type: string, (alt): NumeroComprobante, (display): Número de comprobante }
  idSupplier: { type: long, (alt): IdProveedor }
  supplierName: { type: string, (alt): Proveedor, (display): Proveedor }
  invoicesTotalBase:
    { type: double, (alt): TotalDocumentoBase, (display): Total Factura }
  invoicesTotalConversion:
    { type: double, (alt): TotalDocumentoConversion, (display): Total Factura }
  amountWithheldBase:
    { type: double, (alt): MontoRetenidoBase, (display): Monto Retenido }
  amountWithheldConversion:
    { type: double, (alt): MontoRetenidoConversion, (display): Monto Retenido }
  totalToPayBase:
    { type: double, (alt): TotalAPagarBase, (display): Total a Pagar }
  totalToPayConversion:
    { type: double, (alt): TotalAPagarConversion, (display): Total a Pagar }
  idStatus: { type: number, (alt): IdEstatus, (display): Estatus }
  idUser: { type: long, (alt): IdUsuario }
  invoices: { type: IvaInvoicesComprobantDetail, array: true, (alt): DETALLE }

IvaInvoicesComprobant:
  (alt): ComprobanteRetencionIvaDocumento

  (list_ignore): true
  (isPage): true
  (singular): true
  (singularFromFilter): true
  (filter): IvaInvoicesComprobantFilter
  (pageItem): IvaInvoicesComprobantItem
  (post_model): IvaInvoicesComprobantPost

  elements: { type: IvaInvoicesComprobantItem, array: true, (alt): ELEMENTOS }
  count: { type: number, (alt): CantidadRegistros }

IvaInvoicesComprobantPost:
  (alt): ComprobanteRetencionIvaDocumento

  (sql_ignore): true
  (filter_ignore): true
  (dao_ignore): true
  (service_ignore): true
  (list_ignore): true
  (embedFilter): true
  (model_ignore): true

  id: { type: long, pk: true, (alt): IdComprobanteRetencionIvaDocumento }
  date: { type: date, (alt): FechaComprobante, (display): Fecha }
  comprobantNumber:
    { type: string, (alt): NumeroComprobante, (display): Número de comprobante }
  idSupplier: { type: long, (alt): IdProveedor }
  idStatus: { type: number, (alt): IdEstatus, (display): Estatus }
  idUser: { type: long, (alt): IdUsuario }
  invoices: { type: IvaInvoicesComprobantDetail, array: true, (alt): DETALLE }

###########################################################################################################

TrialBalanceFilter:
  (sql_ignore): true
  (filter_ignore): true
  (dao_ignore): true
  (service_ignore): true
  (list_ignore): true
  (embedFilter): true

  page: { type: number, default: 1, (alt): NumeroPagina }
  pageSize: { type: number, default: 5, (alt): RegistrosPagina }
  initDate: { type: date, default: zeroDate(), (alt): FechaInicio }
  endDate: { type: date, default: now(), (alt): FechaFin }
  initAccountingAccount:
    { default: "", type: string, (alt): CodigoCuentaContableInicio }
  endAccountingAccount:
    { default: "", type: string, (alt): CodigoCuentaContableFin }
  # detailLevel: { default: -1, type: long, (alt): IdNivelDetalle }
  idBusiness: { default: 1, type: long, (alt): IdEmpresa }

TrialBalanceElement:
  (service_ignore): true
  (sql_ignore): true
  (filter_ignore): true

  fiscalPeriodId: { type: long, (alt): IdPeriodoFiscal }
  accountingAccountId: { type: long, (alt): IdCuentaContable }
  accountingAccountCode:
    {
      type: string,
      (alt): CodigoCuentaContable,
      (display): Código de la cuenta,
    }
  accountingAccountName:
    { type: string, (alt): CuentaContable, (display): Descripción de la cuenta }
  previousBalance:
    { type: double, (alt): SaldoAnterior, (display): Saldo anterior }
  previousBaseBalance:
    { type: double, (alt): SaldoBaseAnterior, (display): Saldo anterior }
  previousConversionBalance:
    { type: double, (alt): SaldoConversionAnterior, (display): Saldo anterior }
  credit: { type: double, (alt): Credito, (display): Creditos }
  debit: { type: double, (alt): Debito, (display): Debitos }
  creditConversion: { type: double, (alt): CreditoBase, (display): Creditos }
  debitBase: { type: double, (alt): DebitoConversion, (display): Debitos }

TrialBalance:
  (alt): "BalanceComprobacion"
  (list_ignore): true
  (isPage): true
  (notPost): true
  (singular): true
  (singularFromFilter): true
  (filter): TrialBalanceFilter
  (pageItem): TrialBalanceElement

  (spGet): "[ERP_FMS].[Transaccional].[spConsultarBalanceComprobacion]"

  elements: { type: TrialBalanceElement, array: true, (alt): ELEMENTOS }
  count: { type: number, (alt): CantidadRegistros }

##############################################################################################################

LedgerBalanceFilter:
  (sql_ignore): true
  (service_ignore): true
  (list_ignore): true

  initDate: { type: date, default: zeroDate(), (alt): FechaInicio }
  endDate: { type: date, default: now(), (alt): FechaFin }
  initAccountingAccount:
    { default: "", type: string, (alt): CodigoCuentaContableInicio }
  endAccountingAccount:
    { default: "", type: string, (alt): CodigoCuentaContableFin }
  idBusiness: { default: 1, type: long, (alt): IdEmpresa }

LedgerBalanceItem:
  (sql_ignore): true
  (filter_ignore): true
  (service_ignore): true
  (list_ignore): true

  fiscalPeriodId: { type: long, (alt): IdPeriodoFiscal }
  accountingAccountId: { type: long, (alt): IdCuentaContable }
  accountingAccountName: { type: string, (alt): CuentaContable }
  accountingAccountCode: { type: string, (alt): CodigoCuentaContable }
  credit: { type: double, (alt): Credito }
  debit: { type: double, (alt): Debito }

IncomeStatement:
  (filter): LedgerBalanceFilter
  (alt): EstadoResultado
  (list_ignore): true
  (singular): true
  (singularFromFilter): true
  (notPost): true

  (spGet): "[ERP_FMS].[Transaccional].[spObtenerEstadoResultado]"

  incomeRoot: { type: LedgerBalanceItem, array: true, (alt): DETALLEPASIVO }
  expenseRoot:
    { type: LedgerBalanceItem, array: true, (alt): DETALLEPATRIMONIO }
  # incomeRoot: { type: IncomeStatementDistribution, array: true, (alt): DETALLEINGRESOS }
  # expenseRoot: { type: IncomeStatementDistribution, array: true, (alt): DETALLEEGRESOS }

GeneralBalance:
  (filter): LedgerBalanceFilter
  (alt): BalanceGeneral
  # (list_ignore): true
  (singular): true
  (singularFromFilter): true
  (notPost): true

  (spGet): "[ERP_FMS].[Transaccional].[spObtenerBalanceGeneral]"

  activeRoot: { type: LedgerBalanceItem, array: true, (alt): DETALLEACTIVO }
  pasiveRoot: { type: LedgerBalanceItem, array: true, (alt): DETALLEPASIVO }
  equityRoot: { type: LedgerBalanceItem, array: true, (alt): DETALLEPATRIMONIO }
# FiscalYearFilter:
#   (sql_ignore): true
#   (filter_ignore): true
#   (dao_ignore): true
#   (service_ignore): true

#   id:
#     type: long
#     pk: true
#     (alt): "IdPeriodoFiscal"
#     default: -1
#   year: text
#   unitPeriodType: long
#   fiscalPeriods: { type: FiscalPeriod, array: true }
#   active: bool

# FiscalYear:
#   (display): Ejercicio fiscal
#   (displayPlural): Ejercicios fiscales
#   (filter): FiscalYearFilter
#   (alt): EjercicioFiscal
#   id:
#     type: long
#     pk: true
#     (alt): "IdPeriodoFiscal"
#     default: -1
#     (display): Código
#   year: { type: text, (display): Ejercicio Fiscal }
#   periodLength: { type: number, (display): Cantidad de periodos }
#   initDate: { type: date, default: "now()", (display): Fecha de inicio }
#   zeroDate: { type: date, default: "zeroDate()", (alt): "FechaFin", (display): Fecha fin}
#   unitPeriodTypeId: long
#   unitPeriodType: string
#   fiscalPeriods: { type: FiscalPeriod, array: true }
#   active: { type: bool, (active): true }
#   createdByUserId: long
#   updatedByUserId: long
#   createdByUser: { type: string, (display): Creado por }
#   updatedByUser: { type: string, (display): Actualizado por }

# FiscalPeriod:
#   (alt): PeriodoFiscal
#   id:
#     type: long
#     pk: true
#   periodNumber: number
#   name: string
#   range: string
#   initDate: date
#   endDate: date
#   openedModules: { type: FiscalPeriodModule, array: true }
#   closedModules: { type: FiscalPeriodModule, array: true }
#   indClosed: string
#   active: bool
#   createdByUserId: long
#   updatedByUserId: long
#   createdByUser: string
#   updatedByUser: string
#   (service_ignore): true

# FiscalPeriodModule:
#   (alt): PeriodoFiscalModulo
#   id:
#     type: long
#     pk: true
#   name: string
#   indClosed: number
#   (service_ignore): true
