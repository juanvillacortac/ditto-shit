(module): "Masters"
(cs_namespace): "ReceivableAccounts"
(namespace): "Financial"

(database_name): "ERP_FMS"
(schema_name): "Maestro"

SalesBookFilter:
  (sql_ignore): true
  (filter_ignore): true
  (dao_ignore): true
  (service_ignore): true
  (list_ignore): true
  (embedFilter): true

  page: { type: number, default: 1, (alt): NumeroPagina }
  pageSize: { type: number, default: 5, (alt): RegistrosPagina }

  dateInterval: { type: number, default: -1, (alt): FechaIntervalo }
  initDate: { type: date, default: zeroDate(), (alt): FechaInicio }
  endDate: { type: date, default: now(), (alt): FechaFin }

  clientId: { default: -1, type: long, (alt): IdCliente }
  branchId: { default: -1, type: long, (alt): IdSucursal }

  idBusiness: { default: 1, type: long, (alt): IdEmpresa }

SalesBookElement:
  (service_ignore): true
  (sql_ignore): true
  (filter_ignore): true

  date: { type: date, (alt): Fecha, (display): Fecha }
  rif: { type: string, (alt): RIF, (display): RIF }
  name: { type: string, (alt): NombreRazonSocial, (display): Nombre / Razón Social }
  ivaComprobantId: { type: long, (alt): IdComprobanteRetencionIvaFactura }
  numberIvaComprobant: { type: string, (alt): NumeroComprobanteRetencionIvaFactura, (display): Nombre / Razón Social }
  dateIvaComprobant: { type: date, (alt): FechaComprobanteRetencionIvaFactura, (display): Fecha Retención IVA }
  invoiceTypeId: { type: long, (alt): IdTipoFactura }
  invoiceType: { type: string, (alt): TipoFactura, (display): Tipo Documento }
  invoiceId: { type: long, (alt): IdFactura }
  invoiceNumber: { type: string, (alt): NumeroFactura, (display): Número de factura afectada }

  salesTotalPlusIvaBase: { type: double, (alt): TotalVentasMasIvaBase, (display): Total Ventas + IVA }
  salesTotalPlusIvaConversion: { type: double, (alt): TotalVentasMasIvaConversion }

  exemptIvaBase: { type: double, (alt): ExentoBase, (display): Exento }
  exemptIvaConversion: { type: double, (alt): ExentoConversion }

  taxedReduced8Base: { type: double, (alt): GravadaReducida8Base, (display): Gravada Reducida 8% }
  taxedReduced8Conversion: { type: double, (alt): GravadaReducida8Conversion }

  iva8Base: { type: double, (alt): Iva8%Base, (display): IVA 8% }
  iva8Conversion: { type: double, (alt): Iva8%Conversion }

  taxedGeneral12Base: { type: double, (alt): GravadaGeneral12Base, (display): Gravada General 12% }
  taxedGeneral12Conversion: { type: double, (alt): GravadaReducida12Conversion }

  iva12Base: { type: double, (alt): Iva12Base, (display): IVA 12% }
  iva12Conversion: { type: double, (alt): Iva12Conversion }

  taxedGeneral16Base: { type: double, (alt): GravadaGeneral16Base, (display): Gravada General 16% }
  taxedGeneral16Conversion: { type: double, (alt): GravadaReducida16Conversion }

  iva16Base: { type: double, (alt): Iva16Base, (display): IVA 16% }
  iva16Conversion: { type: double, (alt): Iva16Conversion }

  retention75Base: { type: double, (alt): "PorcentajeRetencion75Base", (display): "% Retención 75/100" }
  retention75Conversion: { type: double, (alt): PorcentajeRetencion75Conversion }

  ivaWithheldBase: { type: double, (alt): IvaRetenidoBase, (display): IVA Retenido }
  ivaWitheldConversion: { type: double, (alt): IvaRetenidoConversion }

  ivaReceivedBase: { type: double, (alt): IvaRecibidoBase, (display): IVA Recibido }
  ivaReceivedonversion: { type: double, (alt): IvaRecibidoConversion }

SalesBook:
  (alt): "LibroVenta"
  (list_ignore): true
  (isPage): true
  (notPost): true
  (singular): true
  (singularFromFilter): true
  (filter): SalesBookFilter
  (pageItem): SalesBookElement

  elements: { type: SalesBookElement, array: true, (alt): ELEMENTOS }
  count: { type: number, (alt): CantidadRegistros }

##############################################################################################################

IvaInvoice:
  (alt): FacturaIva

  (sql_ignore): true
  (filter_ignore): true
  (service_ignore): true

  id: { type: long, (alt): IdFactura }
  date: { type: date, (alt): FechaFactura, (display): Fecha }
  control: { type: string, (alt): NumeroControlFactura, (display): Control }
  invoiceTotalBase: { type: double, (alt): TotalFacturaFacturaBase, (display): Total Factura }
  invoiceTotalConversion: { type: double, (alt): TotalFacturaConversion, (display): Total Factura }
  taxId: { type: long, (alt): IdImpuesto }
  invoiceTypeId: { default: -1, type: number, (alt): IdTipoFactura }
  invoiceType: { type: string, (alt): TipoFactura }
  ivaAmountBase: { type: double, (alt): MontoIvaFacturaBase, (display): Monto IVA }
  ivaAmountConversion: { type: double, (alt): MontoIvaFacturaConversion, (display): Monto IVA }
  ivaRetention: { type: double, (alt): PorcentajeRetencionIvaFactura, (display): "% Retención de IVA" }
  retentionTotalBase: { type: double, (alt): TotalRetencionFacturaBase, (display): Total Retencion }
  retentionTotalConversion: { type: double, (alt): TotalRetencionFacturaConversion, (display): Total Retencion }
  totalBase: { type: double, (alt): TotalFacturaBase, (display): Total }
  totalConversion: { type: double, (alt): TotalFacturaConversion, (display): Total }

IvaInvoiceListFilter:
  (sql_ignore): true
  (filter_ignore): true
  (dao_ignore): true
  (service_ignore): true
  (list_ignore): true
  (embedFilter): true

  page: { type: number, default: 1, (alt): NumeroPagina }
  pageSize: { type: number, default: 5, (alt): CandidadRegistros }
  idComprobant: { type: long, default: -1, (alt): IdComprobanteRetencionIvaFactura  }
  idSupplier: { default: -1, type: long, (alt): IdProveedor }
  idBusiness: { default: 1, type: long, (alt): IdEmpresa }

IvaInvoiceList:
  (alt): FacturasIva

  (list_ignore): true
  (isPage): true
  (notPost): true
  (singular): true
  (singularFromFilter): true
  (filter): IvaInvoiceListFilter
  (pageItem): IvaInvoice

  elements: { type: IvaInvoice, array: true, (alt): ELEMENTOS }
  count: { type: number, (alt): CantidadRegistros }


IvaInvoicesComprobantDetail:
  (alt):  ComprobanteRetencionIvaFacturaDetalle

  (sql_ignore): true
  (filter_ignore): true
  (service_ignore): true

  id: { type: long, (alt): IdComprobanteRetencionIvaFacturaDetalle }
  invoiceId: { type: long, (alt): IdFactura }
  active: { type: boolean, (alt): IndActivo }


IvaInvoicesComprobantFilter:
  (sql_ignore): true
  (filter_ignore): true
  (dao_ignore): true
  (service_ignore): true
  (list_ignore): true
  (embedFilter): true

  page: { type: number, default: 1, (alt): NumeroPagina }
  pageSize: { type: number, default: 5, (alt): CandidadRegistros }

  initDate: { type: date, default: zeroDate(), (alt): FechaInicio }
  endDate: { type: date, default: now(), (alt): FechaFin }
  supplierType: { default: "", type: string, (alt): TipoProveedor }
  supplierId: { default: -1, type: number, (alt): IdProveedor }
  invoiceTypeId: { default: -1, type: number, (alt): IdTipoFactura }
  statusId: { default: -1, type: number, (alt): IdEstatus }
  idBusiness: { default: 1, type: long, (alt): IdEmpresa }

IvaInvoicesComprobantItem:
  (alt): ComprobanteRetencionIvaFactura

  (omit_on_list): invoices
  (filter_ignore): true
  (service_ignore): true
  (sql_ignore): true

  id: { type: long, pk: true, (alt): IdComprobanteRetencionIvaFactura }
  date: { type: date, (alt): FechaComprobante, (display): Fecha } 
  comprobantNumber: { type: string, (alt): NumeroComprobante, (display): Número de comprobante }
  idSupplier: { type: long, (alt): IdProveedor }
  supplierName: { type: string, (alt): Proveedor, (display): Proveedor }
  invoicesTotalBase: { type: double, (alt): TotalFacturaBase, (display): Total Factura }
  invoicesTotalConversion: { type: double, (alt): TotalFacturaConversion, (display): Total Factura }
  amountWithheldBase: { type: double, (alt): MontoRetenidoBase, (display): Monto Retenido }
  amountWithheldConversion: { type: double, (alt): MontoRetenidoConversion, (display): Monto Retenido }
  totalToPayBase: { type: double, (alt): TotalAPagarBase, (display): Total a Pagar }
  totalToPayConversion: { type: double, (alt): TotalAPagarConversion, (display): Total a Pagar }
  idStatus: { type: number, (alt): IdEstatus, (display): Estatus }
  idUser: { type: long, (alt): IdUsuario }
  invoices: { type: IvaInvoicesComprobantDetail, array: true, (alt): DETALLE }

IvaInvoicesComprobant:
  (alt): ComprobanteRetencionIvaFactura

  (list_ignore): true
  (isPage): true
  (singular): true
  (singularFromFilter): true
  (filter): IvaInvoicesComprobantFilter
  (pageItem): IvaInvoicesComprobantItem
  (post_model): IvaInvoicesComprobantPost

  elements: { type: IvaInvoicesComprobantItem, array: true, (alt): ELEMENTOS }
  count: { type: number, (alt): CantidadRegistros }

IvaInvoicesComprobantPost:
  (alt): ComprobanteRetencionIvaFactura

  (sql_ignore): true
  (filter_ignore): true
  (dao_ignore): true
  (service_ignore): true
  (list_ignore): true
  (embedFilter): true
  (model_ignore): true

  id: { type: long, pk: true, (alt): IdComprobanteRetencionIvaFactura }
  date: { type: date, (alt): FechaComprobante, (display): Fecha } 
  comprobantNumber: { type: string, (alt): NumeroComprobante, (display): Número de comprobante }
  idSupplier: { type: long, (alt): IdProveedor }
  idStatus: { type: number, (alt): IdEstatus, (display): Estatus }
  idUser: { type: long, (alt): IdUsuario }
  invoices: { type: IvaInvoicesComprobantDetail, array: true, (alt): DETALLE }

###########################################################################################################

TrialBalanceFilter:
  (sql_ignore): true
  (filter_ignore): true
  (dao_ignore): true
  (service_ignore): true
  (list_ignore): true
  (embedFilter): true

  page: { type: number, default: 1, (alt): NumeroPagina }
  pageSize: { type: number, default: 5, (alt): RegistrosPagina }
  initDate: { type: date, default: zeroDate(), (alt): FechaInicio }
  endDate: { type: date, default: now(), (alt): FechaFin }
  initAccountingAccount: { default: "", type: string, (alt): CodigoCuentaContableInicio }
  endAccountingAccount: { default: "", type: string, (alt): CodigoCuentaContableFin }
  # detailLevel: { default: -1, type: long, (alt): IdNivelDetalle }
  idBusiness: { default: 1, type: long, (alt): IdEmpresa }

TrialBalanceElement:
  (service_ignore): true
  (sql_ignore): true
  (filter_ignore): true

  fiscalPeriodId: { type: long, (alt): IdPeriodoFiscal }
  accountingAccountId: { type: long, (alt): IdCuentaContable }
  accountingAccountCode: { type: string, (alt): CodigoCuentaContable, (display): Código de la cuenta }
  accountingAccountName: { type: string, (alt): CuentaContable, (display): Descripción de la cuenta }
  previousBalance: { type: double, (alt): SaldoAnterior, (display): Saldo anterior }
  previousBaseBalance: { type: double, (alt): SaldoBaseAnterior, (display): Saldo anterior }
  previousConversionBalance: { type: double, (alt): SaldoConversionAnterior, (display): Saldo anterior }
  credit: { type: double, (alt): Credito, (display): Creditos }
  debit: { type: double, (alt): Debito, (display): Debitos }
  creditConversion: { type: double, (alt): CreditoBase, (display): Creditos }
  debitBase: { type: double, (alt): DebitoConversion, (display): Debitos }

TrialBalance:
  (alt): "BalanceComprobacion"
  (list_ignore): true
  (isPage): true
  (notPost): true
  (singular): true
  (singularFromFilter): true
  (filter): TrialBalanceFilter
  (pageItem): TrialBalanceElement

  (spGet): "[ERP_FMS].[Transaccional].[spConsultarBalanceComprobacion]"

  elements: { type: TrialBalanceElement, array: true, (alt): ELEMENTOS }
  count: { type: number, (alt): CantidadRegistros }

##############################################################################################################

LedgerBalanceFilter:
  (sql_ignore): true
  (service_ignore): true
  (list_ignore): true

  initDate: { type: date, default: zeroDate(), (alt): FechaInicio }
  endDate: { type: date, default: now(), (alt): FechaFin }
  initAccountingAccount: { default: "", type: string, (alt): CodigoCuentaContableInicio }
  endAccountingAccount: { default: "", type: string, (alt): CodigoCuentaContableFin }
  idBusiness: { default: 1, type: long, (alt): IdEmpresa }

LedgerBalanceItem:
  (sql_ignore): true
  (filter_ignore): true
  (service_ignore): true
  (list_ignore): true

  fiscalPeriodId: { type: long, (alt): IdPeriodoFiscal }
  accountingAccountId: { type: long, (alt): IdCuentaContable }
  accountingAccountName: { type: string, (alt): CuentaContable }
  accountingAccountCode: { type: string, (alt): CodigoCuentaContable }
  credit: { type: double, (alt): Credito }
  debit: { type: double, (alt): Debito }

IncomeStatement:
  (filter): LedgerBalanceFilter
  (alt): EstadoResultado
  (list_ignore): true
  (singular): true
  (singularFromFilter): true
  (notPost): true

  (spGet): "[ERP_FMS].[Transaccional].[spObtenerEstadoResultado]"

  incomeRoot: { type: LedgerBalanceItem, array: true, (alt): DETALLEPASIVO }
  expenseRoot: { type: LedgerBalanceItem, array: true, (alt): DETALLEPATRIMONIO }
  # incomeRoot: { type: IncomeStatementDistribution, array: true, (alt): DETALLEINGRESOS }
  # expenseRoot: { type: IncomeStatementDistribution, array: true, (alt): DETALLEEGRESOS }

GeneralBalance:
  (filter): LedgerBalanceFilter
  (alt): BalanceGeneral
  # (list_ignore): true
  (singular): true
  (singularFromFilter): true
  (notPost): true

  (spGet): "[ERP_FMS].[Transaccional].[spObtenerBalanceGeneral]"

  activeRoot: { type: LedgerBalanceItem, array: true, (alt): DETALLEACTIVO }
  pasiveRoot: { type: LedgerBalanceItem, array: true, (alt): DETALLEPASIVO }
  equityRoot: { type: LedgerBalanceItem, array: true, (alt): DETALLEPATRIMONIO }

# FiscalYearFilter:
#   (sql_ignore): true
#   (filter_ignore): true
#   (dao_ignore): true
#   (service_ignore): true

#   id:
#     type: long
#     pk: true
#     (alt): "IdPeriodoFiscal"
#     default: -1
#   year: text
#   unitPeriodType: long
#   fiscalPeriods: { type: FiscalPeriod, array: true }
#   active: bool

# FiscalYear:
#   (display): Ejercicio fiscal
#   (displayPlural): Ejercicios fiscales
#   (filter): FiscalYearFilter
#   (alt): EjercicioFiscal
#   id:
#     type: long
#     pk: true
#     (alt): "IdPeriodoFiscal"
#     default: -1
#     (display): Código
#   year: { type: text, (display): Ejercicio Fiscal }
#   periodLength: { type: number, (display): Cantidad de periodos }
#   initDate: { type: date, default: "now()", (display): Fecha de inicio }
#   zeroDate: { type: date, default: "zeroDate()", (alt): "FechaFin", (display): Fecha fin}
#   unitPeriodTypeId: long
#   unitPeriodType: string
#   fiscalPeriods: { type: FiscalPeriod, array: true }
#   active: { type: bool, (active): true }
#   createdByUserId: long
#   updatedByUserId: long
#   createdByUser: { type: string, (display): Creado por }
#   updatedByUser: { type: string, (display): Actualizado por }

# FiscalPeriod:
#   (alt): PeriodoFiscal
#   id:
#     type: long
#     pk: true
#   periodNumber: number
#   name: string
#   range: string
#   initDate: date
#   endDate: date
#   openedModules: { type: FiscalPeriodModule, array: true }
#   closedModules: { type: FiscalPeriodModule, array: true }
#   indClosed: string
#   active: bool
#   createdByUserId: long
#   updatedByUserId: long
#   createdByUser: string
#   updatedByUser: string
#   (service_ignore): true

# FiscalPeriodModule:
#   (alt): PeriodoFiscalModulo
#   id:
#     type: long
#     pk: true
#   name: string
#   indClosed: number
#   (service_ignore): true
